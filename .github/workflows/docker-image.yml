name: Build CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_REPOSITORY: docker.io/chaosmaker/demo

jobs:
  ci-pipeline:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: ðŸ”§ Setup
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Set Artifact ID env variable
        run: |
          echo "ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

      - name: Print Artifact ID
        run: |
          echo "ARTIFACT_ID= ${{env.ARTIFACT_ID}}"

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: ðŸ”§ Build
        run: mvn -B package --file pom.xml

      - name: Quality Scan (SonarCube)
        run: mvn verify sonar:sonar -Dsonar.projectKey=demo
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      
      - name: Quality Gate check (Sonar)
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
          timeout-minutes: 3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: ðŸ“¦ Build Docker Images
        run: mvn package jib:build -am -DskipTests
        env:
          REGISTRY_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: '${{ env.DOCKERHUB_REPOSITORY }}:${{ env.RELEASE_VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
        env:
          TRIVY_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          TRIVY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
