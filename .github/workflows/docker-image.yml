    #Set up Maven cache
name: CI/CD Pipeline
on:

  #Trigger the workflow on push from the main branch 
  push:
    branches:
      - main
jobs:
  build:
  
    name: Build and push to docker
    
    #Run on ubuntu using the latest version
    runs-on: ubuntu-latest
    
    #Job's steps
    steps:
    
    #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
    - uses: actions/checkout@v1
    
    #Set up JDK 11
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        
    #Set up Maven cache
    - name: Cache Maven packages
        #This action allows caching dependenciPes and build outputs to improve workflow execution time.
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and push image to docker registry
      run: mvn test com.google.cloud.tools:jib-maven-plugin:2.8.0:build  -Djib.to.auth.username=${{ secrets.DOCKER_USERNAME }} -Djib.to.auth.password=${{ secrets.DOCKER_PASSWORD }} 
     
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/chaosmaker/github-flow-test:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
      
    - name: Quality Scan (Sonar)
      uses: sonarsource/sonarqube-scan-action@master
      with:
        projectBaseDir: src/
        args: >
          -Dsonar.projectKey=myProject
          -Dsonar.sources=main/java/
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
    - name: Quality Gate check (Sonar)
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        scanMetadataReportFile: src/.scannerwork/report-task.txt
        timeout-minutes: 3
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
